// Generated by CoffeeScript 1.12.5
(function() {
  var Light, Tween;

  Tween = (function() {
    function Tween(time, elements) {
      this.time = time;
      this.elements = elements;
      this.running = true;
      this.timePassed = 0;
      this.update(0);
    }

    Tween.prototype.update = function(delta) {
      var k, multiplier, ref, results, v;
      if (!this.running) {
        return false;
      }
      this.timePassed += delta;
      if (this.timePassed > this.time) {
        multiplier = 1;
        this.running = false;
      } else {
        multiplier = this.timePassed / this.time;
      }
      ref = this.elements;
      results = [];
      for (k in ref) {
        v = ref[k];
        results.push(v[2] = (v[1] - v[0]) * multiplier + v[0]);
      }
      return results;
    };

    Tween.prototype.value = function(name) {
      return this.elements[name][2];
    };

    Tween.prototype.changeValue = function(name, value) {
      this.elements[name][1] += value;
      return this.running = true;
    };

    return Tween;

  })();

  Light = (function() {
    function Light(lightEl) {
      this.lightEl = lightEl;
      this.on = false;
      this.lightValue = 150;
      this.viewRadius = 0;
      this.alpha = 1.0;
      this.reduction = 1;
      this.tweening = false;
      this.tweenTimePassed = 0;
      this.tweenTime = 0;
      this.tweenTargetRadius = 0;
      this.tweenTargetAlpha = 0;
      this.tweenStartRadius = 0;
      this.tweenStartAlpha = 0;
    }

    Light.prototype.update = function(delta) {
      var multiplier;
      if (this.tweening) {
        this.tweenTimePassed += delta;
        if (this.tweenTimePassed > this.tweenTime) {
          multiplier = 1;
          this.tweening = false;
        } else {
          multiplier = this.tweenTimePassed / this.tweenTime;
        }
        this.viewRadius = (this.tweenTargetRadius - this.tweenStartRadius) * multiplier + this.tweenStartRadius;
        return this.alpha = (this.tweenTargetAlpha - this.tweenStartAlpha) * multiplier + this.tweenStartAlpha;
      } else if (this.on) {
        this.lightValue -= this.reduction * delta;
        if (this.lightValue < 1) {
          this.lightValue = 0;
          return this.turnOff();
        } else {
          return this.viewRadius = this.lightValue + 20;
        }
      }
    };

    Light.prototype.turnOff = function(time) {
      if (time == null) {
        time = 3.0;
      }
      this.on = false;
      this.viewRadius = 0;
      this.alpha = 0.0;
      this.tweenTo(time, 100, 0.4);
      this.lightEl.style.display = 'none';
      return true;
    };

    Light.prototype.turnOn = function(time) {
      if (time == null) {
        time = 3.0;
      }
      if (this.lightValue < 1) {
        return false;
      }
      this.on = true;
      this.tweenTo(time, this.lightValue + 20, 1.0);
      this.lightEl.style.display = 'block';
      return true;
    };

    Light.prototype.tweenTo = function(time, radius, alpha) {
      this.tweenTimePassed = 0;
      this.tweenTime = time;
      this.tweening = true;
      this.tweenStartRadius = this.viewRadius;
      this.tweenTargetRadius = radius;
      this.tweenStartAlpha = this.alpha;
      return this.tweenTargetAlpha = alpha;
    };

    Light.prototype.addPower = function() {
      this.lightValue += 100;
      return this.turnOn(1.0);
    };

    return Light;

  })();

  window.Tween = Tween;

  window.Light = Light;

}).call(this);
